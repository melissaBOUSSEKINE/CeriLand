Index: ../Back-end/ceriLandApi.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, request\r\nimport json\r\n\r\nimport db\r\nfrom object import Object\r\nfrom user import User\r\nfrom panier import Panier\r\nfrom command import Command\r\n\r\napp = Flask(__name__)\r\n\r\ndb = db.DB()\r\n\r\n@app.route('/')\r\ndef hello():\r\n    return 'Hello, world!'\r\n\r\n# !!!!!! Faire attention de l'utiliser! Sinon tu vas attentre au moins une demi heur pour initialiser tous les donn√©es! !!!!!!!!!!! #\r\n@app.route('/resetAllData')\r\ndef resetAllData():\r\n    db.deleteAllComments()\r\n    db.deleteAllPaniers()\r\n    db.deleteAllCommands()\r\n    db.deleteAllObjects()\r\n    db.deleteAllUsers()\r\n    return \"All data has been reseted !\"\r\n\r\n@app.route('/initAllData')\r\ndef initializeAllData():\r\n    nbUser = 1\r\n    nbObjects = 1\r\n    nbCommands = 1\r\n    nbPanier = 1\r\n    while (db.insertUserInitialize() and nbUser<500):\r\n        nbUser += 1\r\n    while (db.insertObjectInitialize() and nbObjects<10000):\r\n        nbObjects += 1\r\n    while (db.insertCommandInitialize() and nbCommands<230):\r\n        nbCommands += 1\r\n    while (db.insertPanierInitialize() and nbPanier<130):\r\n        nbPanier += 1\r\n    return \"Add 100 data in users successfully ! \\n Add 10000 data in objects successfully ! \\n Add 230 data in command successfully ! \\n Add 130 data in panier successfully ! \\n\"\r\n\r\n@app.route('/users')\r\ndef getAllUser():\r\n    users_result = db.getAllUser()\r\n    listUser = []\r\n    for user in users_result:\r\n        userObj = User(user[0], user[1], user[2], user[3], user[4])\r\n        listUser.append(userObj)\r\n    json_users = json.dumps(listUser, default=lambda obj: obj.__dict__, indent=4)\r\n    return json_users\r\n\r\n@app.route('/objects')\r\ndef getAllObjects():\r\n    objects_result = db.getAllObjects()\r\n    listObjects = []\r\n    for object in objects_result:\r\n        objectObj = Object(object[0], object[1], object[2], object[3], object[4], object[5])\r\n        listObjects.append(objectObj)\r\n    json_objects = json.dumps(listObjects, default=lambda obj: obj.__dict__, indent=4)\r\n    return json_objects\r\n\r\n@app.route('/login', methods=['POST'])\r\ndef login():\r\n    username = request.form.get('username')\r\n    password = request.form.get('password')\r\n    # print(f'Username: {username}, Password: {password}')\r\n    user_result = db.login(username, password)\r\n    user = User(user_result[0][0], user_result[0][1], user_result[0][2], user_result[0][3], user_result[0][4])\r\n    json_user = json.dumps(user, default=lambda obj: obj.__dict__, indent=4)\r\n    return json_user\r\n\r\n@app.route('/user/panier/<int:userId>')\r\ndef getPanierByUserId(userId):\r\n    userPanier_result = db.getPanierByUserId(userId)\r\n    listUserPanier = []\r\n    for item in userPanier_result:\r\n        userPanier = Panier(item[0], item[1], item[2])\r\n        listUserPanier.append(userPanier)\r\n    json_userPanier = json.dumps(listUserPanier, default=lambda obj: obj.__dict__, indent=4)\r\n    return json_userPanier\r\n\r\n@app.route('/user/commands_received/<int:ownerId>')\r\ndef getCommandsReceivedByOwnerId(ownerId):\r\n    ownerCommandeReceive_result = db.getCommandsReceivedByOwnerId(ownerId)\r\n    listownerCommandeReceive = []\r\n    for item in ownerCommandeReceive_result:\r\n        ownerCommandeReceive = Command(item[0], item[1], item[2], item[3])\r\n        listownerCommandeReceive.append(ownerCommandeReceive)\r\n    json_ownerCommandeReceive = json.dumps(listownerCommandeReceive, default=lambda obj: obj.__dict__, indent=4)\r\n    return json_ownerCommandeReceive\r\n\r\n@app.route('/user/<int:userId>')\r\ndef getUserByUserId(userId):\r\n    user_result = db.getUserByUserId(userId)\r\n    print(user_result)\r\n    user = User(user_result[0][0], user_result[0][1], user_result[0][2], user_result[0][3], user_result[0][4])\r\n    json_user = json.dumps(user, default=lambda obj: obj.__dict__, indent=4)\r\n    return json_user\r\n\r\n@app.route('/object/<int:objectId>')\r\ndef getObjectByObjectId(objectId):\r\n    object_result = db.getObjectByObjectId(objectId)\r\n    object = Object(object_result[0][0], object_result[0][1], object_result[0][2], object_result[0][3], object_result[0][4], object_result[0][5])\r\n    json_object = json.dumps(object, default=lambda obj: obj.__dict__, indent=4)\r\n    return json_object\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Back-end/ceriLandApi.py b/../Back-end/ceriLandApi.py
--- a/../Back-end/ceriLandApi.py	
+++ b/../Back-end/ceriLandApi.py	
@@ -39,7 +39,7 @@
         nbCommands += 1
     while (db.insertPanierInitialize() and nbPanier<130):
         nbPanier += 1
-    return "Add 100 data in users successfully ! \n Add 10000 data in objects successfully ! \n Add 230 data in command successfully ! \n Add 130 data in panier successfully ! \n"
+    return "Add 500 data in users successfully ! \n Add 10000 data in objects successfully ! \n Add 230 data in command successfully ! \n Add 130 data in panier successfully ! \n"
 
 @app.route('/users')
 def getAllUser():
